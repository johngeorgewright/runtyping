import { array, check, custom, InferOutput, intersect, is, length, minLength, object, optional, pipe, record, string, undefined as Undefined, union, unknown } from 'valibot';

// This file is generated by runtyping (https://github.com/johngeorgewright/runtyping).
// Manual changes might be lost - proceed with caution!
export const ExampleSchema = object({ testArray: optional(union([pipe(array(unknown()), minLength(2), check(data => is(intersect([record(string(), unknown()), custom((data) => !Array.isArray(data), "Unexpected array")]), data[0]) && is(intersect([record(string(), unknown()), custom((data) => !Array.isArray(data), "Unexpected array")]), data[1]) && is(pipe(array(intersect([record(string(), unknown()), custom((data) => !Array.isArray(data), "Unexpected array")])), length(data.slice(2, undefined).length)), data.slice(2, undefined)))), Undefined()])), });

export type ExampleSchema = InferOutput<typeof ExampleSchema>;
